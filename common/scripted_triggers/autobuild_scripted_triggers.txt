#	Example:
#
#	example_trigger = {
#		is_country_type = default
#		free_leader_slots > 0
#	}
#
#
#	In a script file:
#
#	trigger = {
#		example_trigger = yes
#	}
#

autobuild_trigger_has_any_farm = {
	or = {
		has_building = building_primitive_farm
		has_building = building_basic_farm
		has_building = building_hydroponics_farm_1
		has_building = building_hydroponics_farm_2
		has_building = building_hydroponics_farm_3
		has_building = building_hydroponics_farm_4
		has_building = building_hydroponics_farm_5
	}
}

autobuild_trigger_has_any_mine = {
	or = {
		has_building = building_primitive_factory
		has_building = building_mineral_processing_plant_1
		has_building = building_mineral_processing_plant_2
		has_building = building_basic_mine
		has_building = building_mining_network_1
		has_building = building_mining_network_2
		has_building = building_mining_network_3
		has_building = building_mining_network_4
		has_building = building_mining_network_5
	}
}

autobuild_trigger_has_any_power_plant = {
	or = {
		has_building = building_basic_power_plant
		has_building = building_power_plant_1
		has_building = building_power_plant_2
		has_building = building_power_plant_3
		has_building = building_power_plant_4
		has_building = building_power_plant_5
		has_building = betharian_power_plant_1
		has_building = betharian_power_plant_2
		has_building = betharian_power_plant_3
		has_building = betharian_power_plant_4
		has_building = building_power_hub_1
		has_building = building_power_hub_2
	}
}

autobuild_trigger_has_any_science_lab = {
	or = {
		has_building = building_basic_science_lab_1
		has_building = building_physics_lab_1
		has_building = building_physics_lab_2
		has_building = building_physics_lab_3
		has_building = building_physics_lab_4
		has_building = building_biolab_1
		has_building = building_biolab_2
		has_building = building_biolab_3
		has_building = building_biolab_4
		has_building = building_engineering_facility_1
		has_building = building_engineering_facility_2
		has_building = building_engineering_facility_3
		has_building = building_engineering_facility_4

		# star trek
		has_building = building_physics_lab_0
		has_building = building_society_lab_0
		has_building = building_engineering_lab_0
	}
}

autobuild_trigger_has_any_mine_not_replace = {
	or = {
		has_building = building_ancient_factory

		# alphamod
		has_building = building_industrial_camp
		has_building = building_warrior_house
		has_building = building_production_hive
		has_building = building_work_collective
		has_building = building_minerals_market
		has_building = building_materials_manufacturing
		has_building = building_frontier_town
		has_building = building_frontier_city
		has_building = building_fuel_refinery
		has_building = building_fuel_refinery_ex
		has_building = building_fuel_refinery_2
		has_building = building_fuel_refinery_2_ex
		has_building = building_desalinator
		has_building = building_sand_sifter
		has_building = building_sand_sifter_2
		has_building = building_ice_rig_2
		has_building = building_exo_mine
		has_building = building_exo_barracks
		has_building = building_water_excavator
		has_building = building_water_excavator_2
		has_building = building_prison_city
		has_building = building_hive
		has_building = building_sprawl
		has_building = building_sprawl_district
		has_building = building_retreat
		has_building = building_great_citadel
		has_building = building_fuel_refinery_0

		# dlc
		has_building = building_worm_mine

		# # more technologies mod
		# has_building = building_combo_mineral_food_1
		# has_building = building_combo_mineral_food_2
		# has_building = building_combo_mineral_food_3

		# # stellaris+
		# has_building = building_basicfactory
		# has_building = building_mine
		# has_building = building_privateindustry
		# has_building = building_sociallabor
		# has_building = building_concentration
		# has_building = building_ordnancefactory
		# has_building = building_uncommonmine
		# has_building = building_caslonextract
		# has_building = building_orerefinery
		# has_building = building_orerefinery_2
		# has_building = building_orefactory
		# has_building = building_componentfactory
		# has_building = building_industrialtown
		# has_building = building_titanitemine
		# has_building = building_nanitefactory
		# has_building = building_coremine
		# has_building = building_oceanicplatform
		# has_building = building_factoryocean
		# has_building = building_desertmine
		# has_building = building_desertfacility
		# has_building = building_fronzefacility
		# has_building = building_iceextractor
	}
}

autobuild_trigger_has_any_farm_not_replace = {
	or = {
		has_building = building_clinic
		has_building = building_hospital
		has_building = building_agri_processing_complex
		has_building = building_great_pyramid
		has_building = building_paradise_dome

		# horizont dlc
		has_building = building_worm_farm

		# alphamod
		has_building = building_hive_director
		has_building = building_rejuvenation_hive
		has_building = building_luxury_vacations
		has_building = building_basic_farm_adv
		has_building = building_hydroponics_farm_1_adv
		has_building = building_hydroponics_farm_2_adv
		has_building = building_hydroponics_farm_3_adv
		has_building = building_hydroponics_farm_4_adv
		has_building = building_habitat
		has_building = building_biomass_sourcer
		has_building = building_biomass_filtrator
		has_building = building_biomass_processor
		has_building = building_traditional_farm
		has_building = building_preservation
		has_building = building_biomass_former
		has_building = building_biomass_former_ex
		has_building = building_biomass_reformer
		has_building = building_food_hybridiser
		has_building = building_colony_control_pre
		has_building = building_colony_control
		has_building = building_frontier_provisioner
		has_building = building_frontier_provisioner_ex
		has_building = building_libraryofadministration
		has_building = building_chamberofexecutives
		has_building = building_hallofwarriors
		has_building = building_governerspalace
		has_building = building_templeofrule
		has_building = building_councilhall
		has_building = building_fishing_yard
		has_building = building_traditional_plantation
		has_building = building_culture
		has_building = building_great_sanctuary
		has_building = building_great_order
		has_building = building_basic_farm_adv
		has_building = building_hydroponics_farm_1_adv
		has_building = building_hydroponics_farm_2_adv
		has_building = building_hydroponics_farm_3_adv
		has_building = building_hydroponics_farm_4_adv
		has_building = building_habitat
		has_building = building_biomass_sourcer
		has_building = building_biomass_filtrator
		has_building = building_biomass_processor
		has_building = building_traditional_farm
		has_building = building_preservation
		has_building = building_biomass_former
		has_building = building_biomass_former_ex
		has_building = building_biomass_reformer
		has_building = building_food_hybridiser
		has_building = building_colony_control_pre
		has_building = building_colony_control

		# stellaris+
		# has_building = building_farm
		# has_building = building_food_processor
		# has_building = building_rationationcenter
	}
}

autobuild_trigger_has_any_power_plant_not_replace = {
	or = {
		has_building = building_dark_matter_power_plant
		has_building = building_odd_factory

		# dlc
		has_building = building_akx_worm_1

		# alphamod
		has_building = building_powerbank
		has_building = building_powerbank_ex
		has_building = building_hydro_plant
		has_building = building_hydro_plant_2
		has_building = building_steam_plant
		has_building = building_hydro_cell_bank
		has_building = building_geothermal_tap
		has_building = building_energy_network
		has_building = building_war_monastery
		has_building = building_power_hive
		has_building = building_power_plant_collective
		has_building = building_energy_market
		has_building = building_luxuries_manufacturing
		has_building = building_luxuries_manufacturing_ex
		has_building = building_food_retailer
		has_building = building_data_brokerage
		has_building = building_tradestation
		has_building = building_tradestation_ex
		has_building = building_trade_company
		has_building = building_trade_company_ex
		has_building = building_frontier_brewery
		has_building = building_frontier_brewery_ex
		has_building = building_cantina
		has_building = building_fuel_sourcer
		has_building = building_fuel_sourcer_2
		has_building = building_fuel_sourcer_3
		has_building = building_alpha_fuel_converter
		has_building = building_alpha_fuel_converter_2
		has_building = building_alpha_fuel_converter_3
		has_building = building_alpha_fuel_converter_4
		has_building = building_steammaker
		has_building = building_stormtower
		has_building = building_moisture_farm
		has_building = building_moisture_farm_2
		has_building = building_moisture_farm_3
		has_building = building_solar_power_plant
		has_building = building_exo_power_plant
		has_building = building_atmos_gen
		has_building = building_greenhousing
		has_building = building_vertical_farms
		has_building = building_hive
		has_building = building_sprawl
		has_building = building_large_city

		# # more technologies mod
		# has_building = building_combo_food_power_1
		# has_building = building_combo_food_power_2
		# has_building = building_combo_food_power_3
		# has_building = building_burning_facility
		# has_building = building_hydrofusion_plant

		# # stellaris+
		# has_building = building_nuclear_power_plant
		# has_building = building_imperial_town
		# has_building = building_geothermal
		# has_building = building_hydraulic
		# has_building = building_corporationtown
		# has_building = building_corporationhq
		# has_building = building_xenorec
		# has_building = building_fortresstown
		# has_building = building_xenohotel
		# has_building = building_ownedmedia
		# has_building = building_planetmarket
		# has_building = building_hivetown
		# has_building = building_landingplat
		# has_building = building_dilithiumreactor
		# has_building = building_educationcenter
		# has_building = building_cityexpansion
		# has_building = building_researchtown
	}
}

autobuild_trigger_has_any_science_lab_not_replace = {
	or = {
		has_building = building_mutant_landfill
		has_building = building_vault
		has_building = building_vault_2
		has_building = building_zanaam_obelisk
		has_building = building_toy_factory
		has_building = building_particle_accelerator
		has_building = building_fe_xeno_zoo

		# dlc
		has_building = building_akx_worm_2
		has_building = building_akx_worm_3

		# alphamod
		# has_building = building_advanced_shuttleport
		# has_building = building_science_foundation
		# has_building = building_genetic_data
		# has_building = building_smart_labs
		# has_building = building_aerofighter_base
		# has_building = building_dry_dock
		# has_building = building_intellect_hive
		# has_building = building_hall_of_assignment
		# has_building = building_nuclear_research
		# has_building = building_bio_medical
		# has_building = building_forestry
		# has_building = building_arcology

		# # stellaris+
		# has_building = building_rocketlaunch
		# has_building = building_space_surveillance_center
		# has_building = building_sentienttest
		# has_building = building_formationcenter
		# has_building = building_experimentalcenter
		# has_building = building_longrangesensor
		# has_building = building_longrangesensor_2
		# has_building = building_museum
		# has_building = building_spaceresearch
		# has_building = building_livingtest
		# has_building = building_energyresearch
		# has_building = building_weaponresearch
		# has_building = building_supercomputer
		# has_building = building_dataserver
		# has_building = building_testinglab
		# has_building = building_chemicallab
		# has_building = building_underwaterlab
		# has_building = building_desertresearch
		# has_building = building_icereseach

		# star trek
		# has_building = building_war_factory
	}
}

autobuild_trigger_has_any_capital = {
	or = {
		has_building = building_capital_1
		has_building = building_capital_2
		has_building = building_capital_3
		has_building = building_hab_capital

		# alphamod
		has_building = building_exo_ops
		has_building = building_commerce_coord
		has_building = building_mining_guild
		has_building = building_central_databank
		has_building = building_farming_guild

		# stellaris+
		# has_building = building_imperial_capital_1
		# has_building = building_imperial_capital_2
		# has_building = building_imperial_capital_3
		# has_building = building_industrial_capital_1
		# has_building = building_industrial_capital_2
		# has_building = building_fortress_capital_1
		# has_building = building_fortress_capital_2
		# has_building = building_tech_capital_1
		# has_building = building_tech_capital_2
		# has_building = building_hiveworld_capital_1
		# has_building = building_hiveworld_capital_2
	}
}

autobuild_trigger_free_from_autobuild = {
	or = {
		is_planet_class = pc_habitat
		has_modifier = free_from_autobuild
		has_modifier = planet_labs_autobuild
		has_modifier = planet_forge_autobuild
		has_modifier = planet_power_plant_autobuild
		has_modifier = planet_farms_autobuild
		has_building_construction = yes
		sector_controlled = yes
	}
}

autobuild_trigger_free_from_autobuild_not_spec_planets = {
	or = {
		has_modifier = free_from_autobuild
		has_building_construction = yes
		sector_controlled = yes
	}
}

autobuild_trigger_free_from_autoupdate = {
	or = {
		has_modifier = free_from_auto_update
		has_building_construction = yes
		sector_controlled = yes
	}
}

autobuild_trigger_tile_has_strategic_res = {
	or = {
		has_resource = {
			type = sr_alien_pets
			amount > 0
		}
		has_resource = {
			type = sr_betharian
			amount > 0
		}
		autobuild_trigger_tile_has_strategic_res_alphamod = yes
	}
}

autobuild_trigger_tile_has_strategic_res_alphamod = {
	or = {
		has_resource = {
			type = sr_ice
			amount > 0
		}
		has_resource = {
			type = sr_natural_fuels
			amount > 0
		}
		has_resource = {
			type = sr_actinides
			amount > 0
		}
		has_resource = {
			type = sr_h2o
			amount > 0
		}
	}
}

autobuild_trigger_tile_has_any_res = {
	or = {
		autobuild_trigger_tile_has_strategic_res = yes
		and = {
			or = {
				owner = {
					not = {
						has_country_flag = autobuild_7_8
					}
				}
				planet = {
					has_modifier = planet_forge_autobuild
				}
			}
			has_resource = {
				type = minerals
				amount > 0
			}
		}
		and = {
			or = {
				owner = {
					not = {
						has_country_flag = autobuild_7_9
					}
				}
				planet = {
					has_modifier = planet_farms_autobuild
				}
			}
			has_resource = {
				type = food
				amount > 0
			}
		}
		and = {
			or = {
				owner = {
					not = {
						has_country_flag = autobuild_7_10
					}
				}
				planet = {
					has_modifier = planet_power_plant_autobuild
				}
			}
			has_resource = {
				type = energy
				amount > 0
			}
		}
		and = {
			or = {
				owner = {
					not = {
						has_country_flag = autobuild_7_11
					}
				}

				planet = {
					has_modifier = planet_labs_autobuild
				}
			}
			or = {
				has_resource = {
					type = physics_research
					amount > 0
				}
				has_resource = {
					type = society_research
					amount > 0
				}
				has_resource = {
					type = engineering_research
					amount > 0
				}
			}
		}
	}
}

autobuild_trigger_tile_has_energy_more_than_others = {
	autobuild_trigger_tile_has_strategic_res = no
	or = {
		owner = {
			not = {
				has_country_flag = autobuild_7_10
			}
		}

		planet = {
			has_modifier = planet_power_plant_autobuild

		}
	}
	or = {
		has_resource = {
			type = energy
			amount > 4
		}
		and = {
			has_resource = {
				type = energy
				amount = 4
			}
			nor = {
				has_resource = {
					type = minerals
					amount > 4
				}
				has_resource = {
					type = physics_research
					amount > 4
				}
				has_resource = {
					type = society_research
					amount > 4
				}
				has_resource = {
					type = engineering_research
					amount > 4
				}
			}
		}
		and = {
			has_resource = {
				type = energy
				amount = 3
			}
			nor = {
				has_resource = {
					type = minerals
					amount > 3
				}
				has_resource = {
					type = physics_research
					amount > 3
				}
				has_resource = {
					type = society_research
					amount > 3
				}
				has_resource = {
					type = engineering_research
					amount > 3
				}
			}
		}
		and = {
			has_resource = {
				type = energy
				amount = 2
			}
			nor = {
				has_resource = {
					type = minerals
					amount > 2
				}
				has_resource = {
					type = physics_research
					amount > 2
				}
				has_resource = {
					type = society_research
					amount > 2
				}
				has_resource = {
					type = engineering_research
					amount > 2
				}
			}
		}
		and = {
			has_resource = {
				type = energy
				amount = 1
			}
			nor = {
				has_resource = {
					type = minerals
					amount > 1
				}
				has_resource = {
					type = physics_research
					amount > 1
				}
				has_resource = {
					type = society_research
					amount > 1
				}
				has_resource = {
					type = engineering_research
					amount > 1
				}
			}
		}
	}
}

autobuild_trigger_tile_has_minerals_more_than_others = {
	autobuild_trigger_tile_has_strategic_res = no
	or = {
		owner = {
			not = {
				has_country_flag = autobuild_7_8
			}
		}
		planet = {
			has_modifier = planet_forge_autobuild
		}
	}
	or = {
		has_resource = {
			type = minerals
			amount > 4
		}
		and = {
			has_resource = {
				type = minerals
				amount = 4
			}
			nor = {
				has_resource = {
					type = energy
					amount > 4
				}
				has_resource = {
					type = physics_research
					amount > 4
				}
				has_resource = {
					type = society_research
					amount > 4
				}
				has_resource = {
					type = engineering_research
					amount > 4
				}
			}
		}
		and = {
			has_resource = {
				type = minerals
				amount = 3
			}
			nor = {
				has_resource = {
					type = energy
					amount > 3
				}
				has_resource = {
					type = physics_research
					amount > 3
				}
				has_resource = {
					type = society_research
					amount > 3
				}
				has_resource = {
					type = engineering_research
					amount > 3
				}
			}
		}
		and = {
			has_resource = {
				type = minerals
				amount = 2
			}
			nor = {
				has_resource = {
					type = energy
					amount > 2
				}
				has_resource = {
					type = physics_research
					amount > 2
				}
				has_resource = {
					type = society_research
					amount > 2
				}
				has_resource = {
					type = engineering_research
					amount > 2
				}
			}
		}
		and = {
			has_resource = {
				type = minerals
				amount = 1
			}
			nor = {
				has_resource = {
					type = energy
					amount > 1
				}
				has_resource = {
					type = physics_research
					amount > 1
				}
				has_resource = {
					type = society_research
					amount > 1
				}
				has_resource = {
					type = engineering_research
					amount > 1
				}
			}
		}
	}
}

autobuild_trigger_tile_has_food_more_than_others = {
	autobuild_trigger_tile_has_strategic_res = no
	or = {
		owner = {
			not = {
				has_country_flag = autobuild_7_9
			}
		}
		planet = {
			has_modifier = planet_farms_autobuild
		}
	}
	has_resource = {
		type = food
		amount > 0
	}
	nor = {
		has_resource = {
			type = energy
			amount > 0
		}
		has_resource = {
			type = minerals
			amount > 0
		}
		has_resource = {
			type = physics_research
			amount > 0
		}
		has_resource = {
			type = society_research
			amount > 0
		}
		has_resource = {
			type = engineering_research
			amount > 0
		}
	}
	# or = {
	# 	has_resource = {
	# 		type = food
	# 		amount > 4
	# 	}
	# 	and = {
	# 		has_resource = {
	# 			type = food
	# 			amount = 4
	# 		}
	# 		nor = {
	# 			has_resource = {
	# 				type = energy
	# 				amount > 4
	# 			}
	# 			has_resource = {
	# 				type = minerals
	# 				amount > 3
	# 			}
	# 			has_resource = {
	# 				type = physics_research
	# 				amount > 4
	# 			}
	# 			has_resource = {
	# 				type = society_research
	# 				amount > 4
	# 			}
	# 			has_resource = {
	# 				type = engineering_research
	# 				amount > 4
	# 			}
	# 		}
	# 	}
	# 	and = {
	# 		has_resource = {
	# 			type = food
	# 			amount = 3
	# 		}
	# 		nor = {
	# 			has_resource = {
	# 				type = energy
	# 				amount > 3
	# 			}
	# 			has_resource = {
	# 				type = minerals
	# 				amount > 2
	# 			}
	# 			has_resource = {
	# 				type = physics_research
	# 				amount > 3
	# 			}
	# 			has_resource = {
	# 				type = society_research
	# 				amount > 3
	# 			}
	# 			has_resource = {
	# 				type = engineering_research
	# 				amount > 3
	# 			}
	# 		}
	# 	}
	# 	and = {
	# 		has_resource = {
	# 			type = food
	# 			amount = 2
	# 		}
	# 		nor = {
	# 			has_resource = {
	# 				type = energy
	# 				amount > 2
	# 			}
	# 			has_resource = {
	# 				type = minerals
	# 				amount > 1
	# 			}
	# 			has_resource = {
	# 				type = physics_research
	# 				amount > 2
	# 			}
	# 			has_resource = {
	# 				type = society_research
	# 				amount > 2
	# 			}
	# 			has_resource = {
	# 				type = engineering_research
	# 				amount > 2
	# 			}
	# 		}
	# 	}
	# 	and = {
	# 		has_resource = {
	# 			type = food
	# 			amount = 1
	# 		}
	# 		nor = {
	# 			has_resource = {
	# 				type = energy
	# 				amount > 1
	# 			}
	# 			has_resource = {
	# 				type = minerals
	# 				amount > 0
	# 			}
	# 			has_resource = {
	# 				type = physics_research
	# 				amount > 1
	# 			}
	# 			has_resource = {
	# 				type = society_research
	# 				amount > 1
	# 			}
	# 			has_resource = {
	# 				type = engineering_research
	# 				amount > 1
	# 			}
	# 		}
	# 	}
	# }
}

autobuild_trigger_tile_has_science_more_than_others = {
	autobuild_trigger_tile_has_strategic_res = no
	or = {
		owner = {
			not = {
				has_country_flag = autobuild_7_11
			}
		}
		planet = {
			has_modifier = planet_labs_autobuild
		}
	}
	or = {
		has_resource = {
			type = physics_research
			amount > 4
		}
		has_resource = {
			type = society_research
			amount > 4
		}
		has_resource = {
			type = engineering_research
			amount > 4
		}
		and = {
			or = {
				has_resource = {
					type = physics_research
					amount = 4
				}
				has_resource = {
					type = society_research
					amount = 4
				}
				has_resource = {
					type = engineering_research
					amount = 4
				}
			}
			nor = {
				has_resource = {
					type = energy
					amount > 4
				}
				has_resource = {
					type = minerals
					amount > 4
				}
			}
		}
		and = {
			or = {
				has_resource = {
					type = physics_research
					amount = 3
				}
				has_resource = {
					type = society_research
					amount = 3
				}
				has_resource = {
					type = engineering_research
					amount = 3
				}
			}
			nor = {
				has_resource = {
					type = energy
					amount > 3
				}
				has_resource = {
					type = minerals
					amount > 3
				}
			}
		}
		and = {
			or = {
				has_resource = {
					type = physics_research
					amount = 2
				}
				has_resource = {
					type = society_research
					amount = 2
				}
				has_resource = {
					type = engineering_research
					amount = 2
				}
			}
			nor = {
				has_resource = {
					type = energy
					amount > 2
				}
				has_resource = {
					type = minerals
					amount > 2
				}
			}
		}
		and = {
			or = {
				has_resource = {
					type = physics_research
					amount = 1
				}
				has_resource = {
					type = society_research
					amount = 1
				}
				has_resource = {
					type = engineering_research
					amount = 1
				}
			}
			nor = {
				has_resource = {
					type = energy
					amount > 1
				}
				has_resource = {
					type = minerals
					amount > 1
				}
			}
		}
	}
}

autobuild_trigger_tile_has_any_minerals = {
	autobuild_trigger_tile_has_strategic_res = no
	or = {
		owner = {
			not = {
				has_country_flag = autobuild_7_8
			}
		}
		planet = {
			has_modifier = planet_forge_autobuild

		}
	}
	has_resource = {
		type = minerals
		amount > 0
	}
}

# for country
autobuild_trigger_cost = {
	or = {
		not = {
			has_country_flag = autobuild_cost
		}
		and = {
			has_country_flag = autobuild_cost_5000
			minerals > 5000
			or = {
				not = {
					has_global_flag = gf_alphamod_activated
				}
				energy > 5000
			}
		}
		and = {
			has_country_flag = autobuild_cost_2500
			minerals > 2500
			or = {
				not = {
					has_global_flag = gf_alphamod_activated
				}
				energy > 2500
			}
		}
		and = {
			has_country_flag = autobuild_cost_1000
			minerals > 1000
			or = {
				not = {
					has_global_flag = gf_alphamod_activated
				}
				energy > 1000
			}
		}
		and = {
			has_country_flag = autobuild_cost_500
			minerals > 500
			or = {
				not = {
					has_global_flag = gf_alphamod_activated
				}
				energy > 500
			}
		}
	}
}
